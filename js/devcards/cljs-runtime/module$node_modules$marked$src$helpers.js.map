{
"version":3,
"file":"module$node_modules$marked$src$helpers.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/marked/src/helpers.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$marked$src$helpers\"] = function(global,require,module,exports) {\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\nmodule.exports = {\n  escape,\n  unescape,\n  edit,\n  cleanUrl,\n  resolveUrl,\n  noopTest,\n  merge,\n  splitCells,\n  rtrim,\n  findClosingBracket,\n  checkSanitizeDeprecation\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","unescape","html","replace","unescapeTest","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","resolveUrl","base","href","baseUrls","justDomain","test","rtrim","relativeBase","indexOf","protocol","domain","str","c","invert","l","length","suffLen","currChar","substr","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","caret","nonWordAndColonTest","originIndependentUrl","escape","encode","edit","regex","opt","source","obj","name","val","getRegex","RegExp","cleanUrl","sanitize","prot","decodeURIComponent","e","encodeURI","noopTest","exec","merge","i","target","key","arguments","Object","prototype","hasOwnProperty","call","splitCells","tableRow","count","cells","row","match","offset","escaped","curr","split","splice","push","trim","findClosingBracket","b","level","checkSanitizeDeprecation","silent","console","warn"]
}
