{"version":3,"sources":["athens/views/block_page.cljs"],"mappings":"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","names":["athens.views.block-page/title-style","athens.style.color","garden.selectors/+","athens.views.block-page/block-page-change","e","_uid","state","value","cljs.core.swap_BANG_","cljs.core/assoc","athens.views.block-page/block-page-el","_","reagent.core.atom","block","parents","editing-uid","refs","map__58094","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","string","children","uid","cljs.core.not_EQ_","cljs.core/deref","stylefy.core.use_style","athens.views.node-page/page-style","athens.views.breadcrumbs/breadcrumbs-list","cljs.core.doall","iter__4529__auto__","s__58097","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__58099","cljs.core/chunk-buffer","i__58098","map__58100","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__58096","cljs.core/chunk-rest","map__58107","cljs.core/first","cljs.core/cons","cljs.core/rest","title","athens.views.breadcrumbs/breadcrumb","athens.router.navigate_uid","or__4126__auto__","komponentit.autosize/textarea","cljs.core._EQ_","athens.views.node-page/handle-key-down","s__58114","b__58116","i__58115","iter__58113","child","map__58117","map__58120","id","athens.views.blocks/block-el","cljs.core/not-empty","athens.views.node-page/references-style","athens.views.node-page/references-heading-style","reagent.core/adapt-react-class","js/module$node_modules$$material_ui$icons$index.Link","athens.views.node-page/references-list-style","s__58123","b__58125","i__58124","vec__58129","cljs.core.nth","iter__58122","vec__58137","group-title","group","athens.views.node-page/references-group-style","athens.views.node-page/references-group-title-style","athens.parse-renderer/pull-node-from-string","s__58133","b__58135","i__58134","iter__58132","s__58141","b__58143","i__58142","iter__58140","athens.views.node-page/references-group-block-style","athens.views.node-page/ref-comp","athens.views.block-page/block-page-component","ident","athens.db/get-block-document","athens.db/get-parents-recursively","re_frame.core.subscribe","athens.db/get-linked-block-references","cljs.core/chunk-first"],"sourcesContent":["(ns athens.views.block-page\n  (:require\n    [\"@material-ui/icons\" :as mui-icons]\n    [athens.db :as db]\n    [athens.parse-renderer :as parse-renderer]\n    [athens.router :refer [navigate-uid]]\n    [athens.style :refer [color]]\n    [athens.views.blocks :refer [block-el]]\n    [athens.views.breadcrumbs :refer [breadcrumbs-list breadcrumb]]\n    #_[athens.views.buttons :refer [button]]\n    [athens.views.node-page :as node-page]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [garden.selectors :as selectors]\n    [komponentit.autosize :as autosize]\n    [re-frame.core :refer [subscribe]]\n    [reagent.core :as r]\n    [stylefy.core :as stylefy :refer [use-style]]))\n\n\n;;; Styles\n\n\n(def title-style\n  {:position        \"relative\"\n   :overflow        \"visible\"\n   :flex-grow       \"1\"\n   :margin          \"0.1em 0\"\n   :letter-spacing  \"-0.03em\"\n   :word-break      \"break-word\"\n   :line-height     \"1.4em\"\n   ::stylefy/manual [[:textarea {:display \"none\"}]\n                     [:&:hover [:textarea {:display \"block\"\n                                           :z-index 1}]]\n                     [:textarea {:-webkit-appearance \"none\"\n                                 :cursor             \"text\"\n                                 :resize             \"none\"\n                                 :transform          \"translate3d(0,0,0)\"\n                                 :color              \"inherit\"\n                                 :font-weight        \"inherit\"\n                                 :padding            \"0\"\n                                 :letter-spacing     \"inherit\"\n                                 :position           \"absolute\"\n                                 :top                \"0\"\n                                 :left               \"0\"\n                                 :right              \"0\"\n                                 :width              \"100%\"\n                                 :min-height         \"100%\"\n                                 :caret-color        (color :link-color)\n                                 :background         \"transparent\"\n                                 :margin             \"0\"\n                                 :font-size          \"inherit\"\n                                 :line-height        \"inherit\"\n                                 :border-radius      \"0.25rem\"\n                                 :transition         \"opacity 0.15s ease\"\n                                 :border             \"0\"\n                                 :opacity            \"0\"\n                                 :font-family        \"inherit\"}]\n                     [:textarea:focus\n                      :.is-editing {:outline \"none\"\n                                    :z-index 3\n                                    :display \"block\"\n                                    :opacity \"1\"}]\n                     [(selectors/+ :.is-editing :span) {:opacity 0}]]})\n\n\n;;; Components\n\n(defn block-page-change\n  [e _uid state]\n  (let [value (.. e -target -value)]\n    (swap! state assoc :string/local value)))\n\n\n(defn block-page-el\n  [_ _ _ _]\n  (let [state (r/atom {:string/local    nil\n                       :string/previous nil})]\n    (fn [block parents editing-uid refs]\n      (let [{:block/keys [string children uid]} block]\n\n        (when (not= string (:string/previous @state))\n          (swap! state assoc :string/previous string :string/local string))\n\n        [:div.block-page (use-style node-page/page-style {:data-uid uid})\n         ;; Parent Context\n         [:span {:style {:color \"gray\"}}\n          [breadcrumbs-list {:style {:font-size \"1.2rem\"}}\n           (doall\n             (for [{:keys [node/title block/uid block/string]} parents]\n               ^{:key uid}\n               [breadcrumb {:key (str \"breadcrumb-\" uid) :on-click #(navigate-uid uid)}\n                (or title string)]))]]\n\n         ;; Header\n         [:h1 (use-style title-style {:data-uid uid :class \"block-header\"})\n          [autosize/textarea\n           {:id          (str \"editable-uid-\" uid)\n            :value       (:string/local @state)\n            :class       (when (= editing-uid uid) \"is-editing\")\n            :auto-focus  true\n            :on-key-down (fn [e] (node-page/handle-key-down e uid state nil))\n            :on-change   (fn [e] (block-page-change e uid state))}]\n          [:span (:string/local @state)]]\n\n         ;; Children\n         [:div (for [child children]\n                 (let [{:keys [db/id]} child]\n                   ^{:key id} [block-el child]))]\n\n         ;; Refs\n         (when (not-empty refs)\n           [:div\n            [:section (use-style node-page/references-style {:key \"Linked References\"})\n             [:h4 (use-style node-page/references-heading-style)\n              [(r/adapt-react-class mui-icons/Link)]\n              [:span \"Linked References\"]]\n              ;; Hide button until feature is implemented\n              ;;[button {:disabled true} [(r/adapt-react-class mui-icons/FilterList)]]]\n             [:div (use-style node-page/references-list-style)\n              (doall\n                (for [[group-title group] refs]\n                  [:div (use-style node-page/references-group-style {:key (str \"group-\" group-title)})\n                   [:h4 (use-style node-page/references-group-title-style)\n                    [:a {:on-click #(navigate-uid (:block/uid @(parse-renderer/pull-node-from-string group-title)))} group-title]]\n                   (doall\n                     (for [block group]\n                       [:div (use-style node-page/references-group-block-style {:key (str \"ref-\" (:block/uid block))})\n                        [node-page/ref-comp block]]))]))]]])]))))\n\n\n(defn block-page-component\n  [ident]\n  (let [block       (db/get-block-document ident)\n        parents     (db/get-parents-recursively ident)\n        editing-uid @(subscribe [:editing/uid])\n        refs        (db/get-linked-block-references block)]\n    [block-page-el block parents editing-uid refs]))\n\n"]}