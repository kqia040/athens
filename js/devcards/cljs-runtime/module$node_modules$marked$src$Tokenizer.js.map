{
"version":3,
"file":"module$node_modules$marked$src$Tokenizer.js",
"lineCount":18,
"mappings":"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",
"sources":["node_modules/marked/src/Tokenizer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$marked$src$Tokenizer\"] = function(global,require,module,exports) {\nconst { defaults } = require('./defaults.js');\nconst {\n  rtrim,\n  splitCells,\n  escape,\n  findClosingBracket\n} = require('./helpers.js');\n\nfunction outputLink(cap, link, raw) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n\n  if (cap[0].charAt(0) !== '!') {\n    return {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text: cap[1]\n    };\n  } else {\n    return {\n      type: 'image',\n      raw,\n      text: escape(cap[1]),\n      href,\n      title\n    };\n  }\n}\n\n/**\n * Tokenizer\n */\nmodule.exports = class Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap) {\n      if (cap[0].length > 1) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n      return { raw: '\\n' };\n    }\n  }\n\n  code(src, tokens) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const lastToken = tokens[tokens.length - 1];\n      // An indented code block cannot interrupt a paragraph.\n      if (lastToken && lastToken.type === 'paragraph') {\n        tokens.pop();\n        lastToken.text += '\\n' + cap[0].trimRight();\n        lastToken.raw += '\\n' + cap[0];\n        return lastToken;\n      } else {\n        const text = cap[0].replace(/^ {4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic\n            ? rtrim(text, '\\n')\n            : text\n        };\n      }\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      return {\n        type: 'code',\n        raw: cap[0],\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text: cap[3] || ''\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text: cap[2]\n      };\n    }\n  }\n\n  nptable(src) {\n    const cap = this.rules.block.nptable.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n        raw: cap[0]\n      };\n\n      if (item.header.length === item.align.length) {\n        let l = item.align.length;\n        let i;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.cells.length;\n        for (i = 0; i < l; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        return item;\n      }\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *> ?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  list(src) {\n    const cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw = cap[0];\n      const bull = cap[2];\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw,\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false,\n        items: []\n      };\n\n      // Get each top-level item.\n      const itemMatch = cap[0].match(this.rules.block.item);\n\n      let next = false,\n        item,\n        space,\n        b,\n        addBack,\n        loose,\n        istask,\n        ischecked;\n\n      const l = itemMatch.length;\n      for (let i = 0; i < l; i++) {\n        item = itemMatch[i];\n        raw = item;\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (i !== l - 1) {\n          b = this.rules.block.bullet.exec(itemMatch[i + 1])[0];\n          if (bull.length > 1 ? b.length === 1\n            : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n            addBack = itemMatch.slice(i + 1).join('\\n');\n            list.raw = list.raw.substring(0, list.raw.length - addBack.length);\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          list.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        list.items.push({\n          raw,\n          task: istask,\n          checked: ischecked,\n          loose: loose,\n          text: item\n        });\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      return {\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\n      };\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.cells.length;\n        for (i = 0; i < l; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1]\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0]\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src, inLink, inRawBlock) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!inLink && /^<a /i.test(cap[0])) {\n        inLink = true;\n      } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n        inLink = false;\n      }\n      if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        inRawBlock = true;\n      } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink,\n        inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const lastParenIndex = findClosingBracket(cap[2], '()');\n      if (lastParenIndex > -1) {\n        const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n        const linkLen = start + cap[1].length + lastParenIndex;\n        cap[2] = cap[2].substring(0, lastParenIndex);\n        cap[0] = cap[0].substring(0, linkLen).trim();\n        cap[3] = '';\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      const token = outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0]);\n      return token;\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      const token = outputLink(cap, link, cap[0]);\n      return token;\n    }\n  }\n\n  strong(src) {\n    const cap = this.rules.inline.strong.exec(src);\n    if (cap) {\n      return {\n        type: 'strong',\n        raw: cap[0],\n        text: cap[4] || cap[3] || cap[2] || cap[1]\n      };\n    }\n  }\n\n  em(src) {\n    const cap = this.rules.inline.em.exec(src);\n    if (cap) {\n      return {\n        type: 'em',\n        raw: cap[0],\n        text: cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]\n      };\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text: escape(cap[2].trim(), true)\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[1]\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, inRawBlock, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","outputLink","cap","link","raw","href","title","escape","charAt","type","text","defaults","rtrim","splitCells","findClosingBracket","constructor","options","space","src","rules","block","newline","exec","length","code","tokens","lastToken","pop","trimRight","replace","codeBlockStyle","pedantic","fences","lang","trim","heading","depth","nptable","item","header","align","split","cells","l","i","test","hr","blockquote","list","bull","isordered","ordered","start","loose","items","itemMatch","match","next","addBack","indexOf","RegExp","b","bullet","smartLists","slice","join","substring","istask","ischecked","undefined","push","task","checked","html","sanitize","pre","sanitizer","def","tag","toLowerCase","table","lheading","paragraph","inline","inLink","inRawBlock","lastParenIndex","linkLen","token","_escapes","reflink","links","nolink","strong","em","codespan","br","del","autolink","mangle","url","prevCapZero","_backpedal","inlineText","smartypants"]
}
